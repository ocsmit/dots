#dependent hotkeys
#

# terminal emulator
super + Return
	st

# program launcher
super + @space
	rofi -show drun

super + ctrl + @space
	rofi -show run

#~/.config/rofi/scripts/simple.sh

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd



# Open firefox
super + shift + f
	firefox

super + e
	nautilus

super + shift + s
	#flameshot gui -p /home/owen/Pictures
    gnome-screenshot -ac

# lockscreen
alt + shift + x
    betterlockscreen -l dm --display "DP-1"

# Toggle trackpad

#
# bspwm hotkeys
#

# quit/restart bspwm
super + ctrl + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{hj,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space bspc node -p cancel
# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#


#move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-50 0,0 50,0 -50,50 0}

#super + ctrl + {Left,Down,Up,Right}
#	$HOME/.bin$HOME/.bin//move.sh {west, south, north, east}


super + shift + {Left,Down,Up,Right}
	/home/owen/bin/smart_move.sh {west,south,north,east}


#
# Function Keys
#

# requires `xbacklight`
#XF86MonBrightness{Down,Up}
#    light {-dec 15,-inc 15}
XF86MonBrightness{Up,Down}
    brightnessctl s 500{+,-}

#Volume control:
XF86Audio{Mute,LowerVolume,RaiseVolume}
    amixer set Master {toggle,5%-,5%+}

# Toggle Polybar
super + shift + space
	{polybar-msg cmd toggle; bspc config top_padding +0 ,\
         polybar-msg cmd toggle; bspc config top_padding 20 }

# Tabbed

#Start tabbed instance

#super + ctrl + t
#    bash -c 'tabbed'
#    oo

# Next window
super + c
    bspc -f next


# Rotate tree
super + shift + {d,a}
    bspc node @/ -C {forward,backward}

# Send to desktop
ctrl + shift + {1-9,0}
    bspc node -d '^{1-9,10}' --follow# Send to desktop

# Expand/contract a window by moving one of its side outward/inward
#super + q : {h,j,k,l}
#    STEP=20; SELECTION={1,2,3,4}; \
#    bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
#    bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Show help
super + slash
    $HOME/.bin/bspwm_help.sh

# Toggle Slack
alt + s
    $HOME/.bin/bspwm-toggle-visibility Slack


# add to tabbed container
super + ctrl + {Left,Down,Up,Right}
    tabc attach $(bspc query -N -n) {$(bspc query -N -n west),$(bspc query -N -n south),$(bspc query -N -n north),$(bspc query -N -n east)}

# create/remove from tabbed container
super + z
    id=$(bspc query -N -n); \
    [[ "$(tabc printclass $id)" == "tabbed" ]] \
    && tabc detach $id \
    || tabc create $id

# toggle autoattach in tabbed container
super + shift + z
tabc autoattach $(bspc query -N -n)

super + shift + bracket{left,right}
DIR={prev,next}; \
bspc node -d "$DIR"; \
bspc desktop -f "$DIR"

super + shift + m
bspc monitor --focus next

